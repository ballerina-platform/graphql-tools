isolated remote function @{query}(graphql:Field 'field @{params}) returns @{responseType}|error{
    QueryFieldClassifier classifier = new ('field, queryPlan, @{clientName});
    string fieldString = classifier.getFieldString();
    UnresolvableField[] propertiesNotResolved = classifier.getUnresolvableFields();
    string queryString = wrapwithMutation("@{query}", fieldString @{queryArgs});
    @{query}Response response = check @{clientName}_CLIENT->execute(queryString);
    @{responseType} result = response.data.@{query};
    Resolver resolver = new (queryPlan, result.toJson(), "@{basicResponseType}", propertiesNotResolved, ["@{query}"]);
    json|error finalResult = resolver.getResult();
    if finalResult is error {
        return finalResult;
    } else {
        return finalResult.cloneWithType();
    }
}